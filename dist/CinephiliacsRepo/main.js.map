{"version":3,"sources":["./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/interceptor.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/http.service.ts","./src/app/discussion/discussion.component.html","./src/app/discussion/discussion.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/logger.service.ts","./src/app/login.service.ts","./src/app/url.service.ts","./src/app/all-users/all-users.component.html","./src/app/all-users/all-users.component.ts","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/app-routing.module.ts","./src/app/movie/movie.component.html","./src/app/movie/movie.component.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div *ngIf=\"userName\">\n  <h1 class=\"left\">{{userName}}'s Profile</h1>\n\n  <div class=\"leftmovie\">\n    <h3>Favorite Movies</h3>\n    <span *ngIf=\"moviesAreLoaded; then thenMBlock else elseMBlock\"></span>\n    <ng-template #thenMBlock>\n      <div *ngIf=\"userMovies.length\">\n        <ul class=\"movies\">\n          <li *ngFor=\"let movie of userMovies\">\n            <div class=\"image\">\n                <img src=\"{{movie.Poster}}\" routerLink=\"/movie/{{movie.imdbID}}\" alt=\"Movie Poster\">\n            </div>\n            <p class=\"name\">{{ movie.Title }}</p>\n            <p class=\"year\">{{ movie.Year }}<span *ngIf=\"movie.Year.substring(movie.Year.length - 1)=='–'\">present</span></p>\n            <p class=\"id\">{{ movie.imdbID }}</p>\n          </li>\n        </ul>\n      </div>\n      <div *ngIf=\"!userMovies.length\">\n        <h4 class=\"missing\">No Favorited Movies</h4>\n      </div>\n    </ng-template>\n    <ng-template #elseMBlock>\n      <h4>Loading Movies . . .</h4>\n    </ng-template>\n  </div>\n\n  <div class=\"left\">\n    <h3>Reviews</h3>\n    <div *ngIf=\"reviewsAreLoaded; then thenRBlock else elseRBlock\"></div>\n    <ng-template #thenRBlock>\n      <div *ngIf=\"userReviews.length\">\n        <ul class=\"reviews\">\n          <li *ngFor=\"let review of userReviews\">\n            <p class=\"rating\">{{ review.rating}}</p>\n            <a routerLink =\"/user/{{review.username}}\" class=\"username\">{{ review.username}}</a>\n            <p >{{ review.text}}</p>\n          </li>\n        </ul>\n      </div>\n      <div *ngIf=\"!userReviews.length\">\n        <h4 class=\"missing\">No Reviews</h4>\n      </div>\n    </ng-template>\n    <ng-template #elseRBlock>\n      <h4>Loading Reviews . . .</h4>\n    </ng-template>\n\n    <h3>Discussions</h3>\n    <div *ngIf=\"discussionsAreLoaded; then thenDBlock else elseDBlock\"></div>\n    <ng-template #thenDBlock>\n      <div *ngIf=\"userDiscussions.length\">\n        <ul class=\"discussions\">\n          <li *ngFor=\"let discussion of userDiscussions\">\n            <a routerLink=\"/user/{{discussion.username}}\" class=\"username\">{{ discussion.username }}</a>\n            <p *ngIf=\"discussion.topic != 'None'\" class=\"topic\">Topic: {{ discussion.topic}}</p>\n            <div routerLink=\"/discussion/{{discussion.discussionid}}\" class=\"discussionsubject\">{{ discussion.subject}}</div>\n          </li>\n        </ul>\n      </div>\n      <div *ngIf=\"!userDiscussions.length\">\n        <h4 class=\"missing\">No Discussions</h4>\n      </div>\n    </ng-template>\n    <ng-template #elseDBlock>\n      <h4>Loading Discussions . . .</h4>\n    </ng-template>\n\n    <h3>Comments</h3>\n    <div *ngIf=\"commentsAreLoaded; then thenCBlock else elseCBlock\"></div>\n    <ng-template #thenCBlock>\n      <div *ngIf=\"userComments.length\">\n        <ul class=\"comments\">\n          <li *ngFor=\"let comment of userComments\">\n            <div  class=\"spoilerCover\" *ngIf=\"comment.isspoiler && !spoilersShown()\">\n              <button (click)=\"showSpoilers()\">Show Spoilers</button>\n            </div>\n            <div class=\"commentContent\" *ngIf=\"!comment.isspoiler || spoilersShown()\">\n              <a routerLink=\"/user/{{comment.username}}\" class=\"username\">{{ comment.username }}</a>\n              <div routerLink=\"/discussion/{{comment.discussionid}}\" class=\"commenttext\">{{comment.text}}</div>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div *ngIf=\"!userComments.length\">\n        <h4 class=\"missing\">No Comments</h4>\n      </div>\n    </ng-template>\n    <ng-template #elseCBlock>\n      <h4>Loading Comments . . .</h4>\n    </ng-template>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Review, Discussion, Comment } from '../models';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { HttpService } from '../http.service';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n  userName: string = \"\";\n\n  moviesAreLoaded: boolean = false;\n  reviewsAreLoaded: boolean = false;\n  discussionsAreLoaded: boolean = false;\n  commentsAreLoaded: boolean = false;\n\n  userMovieNames: string[] = [];\n  userMovies: any[] = [];\n  userReviews: Review[] = [];\n  userDiscussions: Discussion[] = [];\n  userComments: Comment[] = [];\n\n  displaySpoilers: any = false;\n\n  constructor(\n    private logger: LoggerService,\n    private router: ActivatedRoute, private _http: HttpService, private _login: LoginService,) { }\n\n  ngOnInit(): void {\n\n    this.userName = this.router.snapshot.params.username;\n\n    this._login.getUserMovies(this.userName).subscribe(data => {\n      this.userMovieNames = data;\n\n      if (this.userMovieNames) {\n        this.userMovieNames.forEach(movieName => {\n          // Get the Movie information for each favorited movie, for the poster image.\n          this._http.getMovie(movieName).subscribe(movieData => {\n            this.userMovies.push(movieData);\n          });\n        });\n      }\n      this.moviesAreLoaded = true;\n    });\n\n    this._login.getUserDiscussions(this.userName).subscribe(data => {\n      if (data != null) {\n        this.userDiscussions = data;\n      }\n      this.discussionsAreLoaded = true;\n    });\n\n    this._login.getUserComments(this.userName).subscribe(data => {\n      if (data != null) {\n        this.userComments = data;\n      }\n      this.commentsAreLoaded = true;\n    });\n\n    this._login.getUserReviews(this.userName).subscribe(data => {\n      if (data != null) {\n        this.userReviews = data;\n      }\n      this.reviewsAreLoaded = true;\n    });\n  }\n\n  moviesLoaded() {\n    this.moviesAreLoaded = true;\n    this.logger.log(\"\", \"movies are loaded\");\n  }\n  reviewsLoaded() {\n    this.reviewsAreLoaded = true;\n    this.logger.log(\"\", \"reviews are loaded\");\n  }\n  discussionsLoaded() {\n    this.discussionsAreLoaded = true;\n    this.logger.log(\"\", \"discussionsAreLoaded\");\n  }\n  commentsLoaded() {\n    this.commentsAreLoaded = true;\n    this.logger.log(\"\", \"commentsAreLoaded\");\n  }\n\n  getUsername() {\n    this.logger.log(\"\", \"username\" + this.userName);\n    return this.userName;\n  }\n\n  showSpoilers() {\n    this.displaySpoilers = true;\n    this.logger.log(\"\", this.displaySpoilers);\n  }\n\n  spoilersShown() {\n    return this.displaySpoilers;\n  }\n\n}\n","// from: https://medium.com/swlh/using-auth0-to-secure-your-angular-application-and-access-your-asp-net-core-api-1947b9389f4f\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable, of, throwError } from 'rxjs';\nimport { mergeMap, catchError } from 'rxjs/operators';\nimport { LoggerService } from './logger.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// injects the token automatically in the request and passes it along\n// only injects the request if user is currenly loggedin\nexport class InterceptorService implements HttpInterceptor {\n  loggedIn: boolean;\n\n  constructor(private auth: AuthService, private logger: LoggerService) {\n    auth.userProfile$.subscribe((reply) => {\n      this.logger.log(\"in interceptor\", reply);\n      this.loggedIn = reply;\n    });\n  }\n\n  // runs on every request being made\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.loggedIn) {\n      this.logger.log(\"loggedin into interceptor\", \"\");\n      return this.auth.getTokenSilently$().pipe(\n        mergeMap(token => {\n          const tokenReq = req.clone({\n            setHeaders: { Authorization: `Bearer ${token}` }\n          });\n          return next.handle(tokenReq);\n        }),\n        catchError(err => {\n          this.logger.error(\"injector error\", \"\");\n          return throwError(err);\n        })\n      );\n    } else {\n      this.logger.log(\"not loggedin into interceptor\", \"\");\n      return next.handle(req);\n    }\n  }\n}","<div *ngIf=\"currentUser.username\" class=\"right\">\n  <button (click)=\"logout()\">Log Out</button><br>\n</div>\n\n<h1>Welcome <span *ngIf=\"currentUser.username\">{{ currentUser.username }}</span></h1>\n\n<div *ngIf=\"currentUser.username; then thenBlock else elseBlock\"></div>\n<ng-template #thenBlock>\n  <div class=\"container\">\n  </div>\n  <app-profile [currentUser]=\"currentUser\"></app-profile>\n</ng-template>\n<ng-template #elseBlock>\n  <div class=\"left\">\n    <p class=\"about\">Do you like movies and want to find reviews for your potential next watch or analyze your favorite films with other fans? If so, Cinephiliacs is the perfect application for you. Find information and user generated reviews about films or participate in discussions centered around your favorite, or least favorite, films. You can even follow individual movies to stay up to date on the discussions that have happened while you were away.</p>\n  </div>\n  <div class=\"right\">\n    <app-login [(currentUser)]=\"currentUser\"></app-login>\n  </div>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { LoggerService } from '../logger.service';\nimport { User } from '../models'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  currentUser: User = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    permissions: 1\n  }\n\n  constructor(\n    private logger: LoggerService,\n\n  ) { }\n\n  ngOnInit(): void {\n\n    let userData = localStorage.getItem(\"loggedin\");\n    if (userData != null) {\n      this.currentUser = JSON.parse(userData);\n    }\n  }\n\n  getCurrentUser() {\n    this.logger.log(\"\", this.currentUser);\n    return this.currentUser.username;\n  }\n  getName() {\n    this.logger.log(\"\", this.currentUser.firstname);\n    return this.currentUser.firstname;\n  }\n  getEmail() {\n    this.logger.log(\"\", this.currentUser.email);\n    return this.currentUser.email;\n  }\n  getPermissions() {\n    this.logger.log(\"\", this.currentUser.permissions);\n    return this.currentUser.permissions;\n  }\n\n  logout() {\n    this.currentUser.username = \"\";\n    this.currentUser.firstname = \"\";\n    this.currentUser.lastname = \"\";\n    this.currentUser.email = \"\";\n    localStorage.clear();\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { LoggerService } from './logger.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  connectionString: string = \"https://movie-database-imdb-alternative.p.rapidapi.com\";\n  apiKey: string = \"f6d24cec46msh55a535ae1cf36d0p1bf4bcjsnd49b624447d2\";\n\n  constructor(private http: HttpClient,\n    private logger: LoggerService,\n  ) {\n\n  }\n\n  getMovies(searchTerm: string, pageNum: number) {\n    return this.http.get(\"https://movie-database-imdb-alternative.p.rapidapi.com/?rapidapi-key=f6d24cec46msh55a535ae1cf36d0p1bf4bcjsnd49b624447d2&s=\" + searchTerm + \"&r=json&page=\" + pageNum);\n    //return this.http.get('https://api.openbrewerydb.org/breweries')\n    //COME ON WORK\n  }\n\n  getMovie(id: string) {\n    return this.http.get(\"https://movie-database-imdb-alternative.p.rapidapi.com?rapidapi-key=f6d24cec46msh55a535ae1cf36d0p1bf4bcjsnd49b624447d2&i=\" + id + \"&r=json\");\n  }\n\n  getConnection() {\n    this.logger.log(\"\", this.connectionString);\n    return this.connectionString;\n  }\n\n  getAPIKey() {\n    this.logger.log(\"\", this.connectionString);\n    return this.apiKey;\n  }\n\n\n\n\n\n}\n","<h1>{{subject}}</h1>\n\n<div *ngIf=\"comments\">\n    <ul>\n        <li *ngFor=\"let comment of comments\">\n            <div  class=\"spoilerCover\" *ngIf=\"comment.isspoiler && !spoilersShown()\">\n                <button (click)=\"showSpoilers()\">Show Spoilers</button>\n            </div>\n            <div class=\"commentContent\" *ngIf=\"!comment.isspoiler || spoilersShown()\">\n                <a routerLink=\"/user/{{comment.username}}\" class=\"username\">{{ comment.username }}</a>\n                <div class=\"commenttext\">{{comment.text}}</div>\n            </div>\n        </li>\n    </ul>\n</div>\n\n<div id=\"input\">\n    <h3>New Comment</h3>\n    <form>\n        <input type=\"text\" placeholder=\"Comment\" id=\"comment\" [(ngModel)]=\"newComment.text\" [ngModelOptions]=\"{standalone: true}\" required><br>\n        <button (click)=\"postComment()\">Post Comment</button>\n        <input type=\"checkbox\" id=\"spoiler\" [(ngModel)]=\"newComment.isspoiler\" [ngModelOptions]=\"{standalone: true}\">\n        <label>Spoiler</label>\n    </form>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoggerService } from '../logger.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-discussion',\n  templateUrl: './discussion.component.html',\n  styleUrls: ['./discussion.component.scss']\n})\nexport class DiscussionComponent implements OnInit {\n\n  comments: any;\n  disscussionID: string = \"\";\n  discussion: any;\n  subject: any;\n  displaySpoilers: any = false;\n  user: any;\n\n  newComment: any = {\n    discussionid: 0,\n    username: \"\",\n    text: \"\",\n    isspoiler: false\n  };\n\n  constructor(\n    private logger: LoggerService,\n    private _login: LoginService, private router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    this.disscussionID = this.router.snapshot.params.id;\n    this.newComment.discussionid = this.router.snapshot.params.id;\n    this.displayInput();\n    this.getComments();\n    this._login.getCurrentDiscussion(this.disscussionID).subscribe(data => {\n      this.logger.log(\"\", data);\n      this.discussion = data;\n      this.subject = this.discussion.subject;\n    });\n  }\n\n  async getComments() {\n    setTimeout(() => {\n      this._login.getDiscussionComments(this.disscussionID).subscribe(data => {\n        this.logger.log(\"\", data);\n        this.comments = data;\n      });\n    }, 1000);\n  }\n\n  displayInput() {\n    if (localStorage.getItem(\"loggedin\")) {\n      this.user = localStorage.getItem(\"loggedin\");\n      this.newComment.username = JSON.parse(this.user).username;\n      this.logger.log(\"\", \"User Logged In\");\n    } else {\n      this.logger.log(\"\", \"Hide inputs\");\n    }\n  }\n\n  getDicussionID() {\n    this.logger.log(\"\", \"Dicussion ID \" + this.disscussionID);\n    return this.disscussionID;\n  }\n\n  postComment() {\n    if (this.isEmpty(this.newComment.text)) {\n      this.logger.log(\"\", \"Please enter a comment\");\n    } else {\n      this._login.postComment(this.newComment).subscribe(data => this.logger.log(\"\", data));\n      this.getComments();\n    }\n    this.logger.log(\"\", this.newComment);\n  }\n\n  showSpoilers() {\n    this.displaySpoilers = true;\n    this.logger.log(\"\", this.displaySpoilers);\n  }\n\n  spoilersShown() {\n    return this.displaySpoilers;\n  }\n\n  isEmpty(testSTR: string) {\n    return (testSTR == \"\");\n  }\n\n}","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, Validators } from '@angular/forms';\nimport { AuthService } from './auth.service';\nimport { LoggerService } from './logger.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-app';\n  test: string = '';\n\n  headerSearch!: FormGroup;\n\n  // use this to know who the user is\n  authModel: any;\n  // use this to determine if user is an admin\n  isUserAdmin: boolean;\n  // use this to determine if user is logged in\n\n  constructor(public auth: AuthService, private logger: LoggerService) { }\n\n  ngOnInit(): void {\n    this.headerSearch = new FormGroup({\n      headSearch: new FormControl('', Validators.minLength(2))\n    });\n    this.auth.userProfile$.subscribe(reply => {\n      this.logger.log(\"userprofile\", reply);\n    });\n    this.auth.authModel$.subscribe(reply => {\n      this.logger.log(\"authmodel\", reply);\n      this.authModel = reply;\n    });\n    this.auth.isAdmin$.subscribe(reply => {\n      this.logger.log(\"is admin\", reply);\n      this.isUserAdmin = reply;\n    });\n  }\n\n  reloadPage() {\n    this.logger.log(\"reloading\", \"\");\n    window.location.reload();\n  }\n\n  onSubmit() {\n    if (this.headerSearch.get('headSearch')!.value != \"\") {\n      let searchParam = JSON.stringify(this.headerSearch.get('headSearch')!.value).substring(1, JSON.stringify(this.headerSearch.get('headSearch')!.value).length - 1);\n      window.location.href = \"/list/\" + searchParam + \"/1\";\n    }\n  }\n\n  testLogin() {\n    this.auth.login();\n  }\n\n  testLogout() {\n    this.auth.logout();\n  }\n\n  testCode(num: Number) {\n    return num;\n  }\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<header>\n  <div class=\"container\">\n    <a href=\"#\" routerLink=\"/\" class=\"logo\"><img id=\"siteLogo\" src=\"/assets/Cinephiliacs-Logo.png\"\n        alt=\"Cinephiliacs Logo\" />Cinephiliacs</a>\n    <nav>\n      <ul>\n        <li class=\"search\">\n          <form [formGroup]=\"headerSearch\" (ngSubmit)=\"onSubmit()\">\n            <!-- svg source https://freesvg.org/vector-clip-art-of-minimal-design-search-icon -->\n            <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\"\n              xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\"\n              xmlns=\"http://www.w3.org/2000/svg\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n              xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"25\" height=\"20\"\n              viewBox=\"0 0 55.770032 124.72441\" id=\"svg4983\" version=\"1.1\" inkscape:version=\"0.91 r13725\"\n              sodipodi:docname=\"Minimal Magnifying Glass.svg\">\n              <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\"\n                transform=\"translate(64.082039,-216.03793)\">\n                <g id=\"g4288\" transform=\"matrix(12.843054,0,0,12.843054,-4352.973,-5791.3727)\" >\n                  <circle r=\"3.625\" cy=\"472.13062\" cx=\"335.03351\" id=\"path4284\" />\n                  <path sodipodi:nodetypes=\"cc\" inkscape:connector-curvature=\"0\" id=\"path4286\"\n                    d=\"m 337.9085,474.44313 2.90967,2.26732\" />\n                </g>\n              </g>\n            </svg>\n            <input type=\"text\" name=\"search\" [(ngModel)]=\"test\" placeholder=\"Search Movies\"\n              formControlName=\"headSearch\" />\n          </form>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/\" class=\"profile\">\n            <!-- Free svg from https://freesvg.org/user-icon-silhouette -->\n            <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\"\n              xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\"\n              xmlns=\"http://www.w3.org/2000/svg\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n              xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"35\" height=\"40\"\n              viewBox=\"0 0 248.03149 248.03149\" id=\"svg4526\" version=\"1.1\" inkscape:version=\"0.91 r13725\"\n              sodipodi:docname=\"user.svg\">\n              <g inkscape:label=\"Laag 1\" inkscape:groupmode=\"layer\" id=\"layer1\" transform=\"translate(0,-804.33071)\">\n                <path d=\"m 76.42344,1042.717 c -2.2224,-0.2267 -4.7225,-0.6821 -5.5559,-1.012 -0.8334,-0.3299 -9.3384,-2.8569 -18.9001,-5.6157 -9.5617,-2.7588 -17.4523,-5.0834 -17.5347,-5.1657 -0.2391,-0.2392 2.2788,-42.51159 2.8639,-48.08136 2.2676,-21.58406 6.0483,-32.16101 14.8649,-41.58634 7.5909,-8.11487 14.9224,-11.77177 27.5448,-13.73911 5.5107,-0.85889 39.4433,-1.23111 47.6206,-0.52237 13.0001,1.12673 21.3056,3.10399 29.1231,6.93322 3.9457,1.93271 5.526,3.0883 9.1422,6.68524 9.4197,9.36932 13.7657,22.358 15.8544,47.38281 1.1656,13.96551 2.4884,42.59711 1.9903,43.07931 -0.9176,0.8884 -17.7367,5.5971 -23.3654,6.5414 -20.4406,3.4292 -70.2575,6.467 -83.6481,5.1006 z\"\n                  id=\"path4293-4\" inkscape:connector-curvature=\"0\" />\n                <ellipse id=\"path4295-9\" cx=\"106.96198\" cy=\"883.10352\" rx=\"40.658642\" ry=\"38.327599\" />\n              </g>\n            </svg>\n          </a>\n        </li>\n        <li>\n          <button (click)=\"testLogin()\">Login</button>\n        </li>\n        <li>\n          <button (click)=\"testLogout()\">Logout</button>\n        </li>\n        <li>\n          <span>signedin? {{this.auth.loggedIn}}</span>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</header>\n<div class=\"play-container\">\n  <p></p>\n</div>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","<div class=\"leftmovie\">\n  <h3>Movies</h3>\n  <div *ngIf=\"moviesAreLoaded; then thenMBlock else elseMBlock\"></div>\n  <ng-template #thenMBlock>\n    <div *ngIf=\"userMovies.length\">\n      <ul class=\"movies\">\n        <li *ngFor=\"let movie of userMovies\">\n          <div class=\"image\">\n              <img src=\"{{movie.Poster}}\" routerLink=\"/movie/{{movie.imdbID}}\" alt=\"Movie Poster\">\n          </div>\n          <p class=\"name\">{{ movie.Title }}</p>\n          <p class=\"year\">{{ movie.Year }}<span *ngIf=\"movie.Year.substring(movie.Year.length - 1)=='–'\">present</span></p>\n          <p class=\"id\">{{ movie.imdbID }}</p>\n        </li>\n      </ul>\n    </div>\n    <div *ngIf=\"!userMovies.length\">\n      <h4 class=\"missing\">No Favorited Movies</h4>\n    </div>\n  </ng-template>\n  <ng-template #elseMBlock>\n    <h4>Loading Movies . . .</h4>\n  </ng-template>\n</div>\n\n<div class=\"right\">\n  <form class=\"update\">\n    <h3>Your Info</h3>\n    <div class=\"container\" (ngSubmit)=\"updateUser()\">\n      <label for=\"uname\">Username</label>\n      <p>{{editedUser.username}}</p>\n      <input *ngIf=\"false\" type=\"text\" [(ngModel)]=\"editedUser.username\" [ngModelOptions]=\"{standalone: true}\" class=\"noneditable\" required><br>\n      <label for=\"uname\">First Name</label>\n      <p *ngIf=\"!userIsEditable\">{{editedUser.firstname}}</p>\n      <input *ngIf=\"userIsEditable\" type=\"text\" [(ngModel)]=\"editedUser.firstname\" [ngModelOptions]=\"{standalone: true}\" required><br>\n      <label for=\"uname\">Last Name</label>\n      <p *ngIf=\"!userIsEditable\">{{editedUser.lastname}}</p>\n      <input *ngIf=\"userIsEditable\" type=\"text\" [(ngModel)]=\"editedUser.lastname\" [ngModelOptions]=\"{standalone: true}\" required><br>\n      <label for=\"uname\">Email</label>\n      <p *ngIf=\"!userIsEditable\">{{editedUser.email}}</p>\n      <input *ngIf=\"userIsEditable\" type=\"text\" [(ngModel)]=\"editedUser.email\" [ngModelOptions]=\"{standalone: true}\" required><br>\n      <button *ngIf=\"!userIsEditable\" (click)=\"editUser()\">Edit Profile</button>\n      <button *ngIf=\"userIsEditable\" (click)=\"updateUser()\">Submit</button>\n      <a *ngIf=\"userIsEditable\" (click)=\"cancelUpdate()\">Cancel Changes</a>\n    </div>\n  </form>\n</div>\n\n<div class=\"left\">\n  <h3>Reviews</h3>\n  <div *ngIf=\"reviewsAreLoaded; then thenRBlock else elseRBlock\"></div>\n  <ng-template #thenRBlock>\n    <div *ngIf=\"userReviews.length\">\n      <ul class=\"reviews\">\n        <li *ngFor=\"let review of userReviews\">\n          <p class=\"rating\">{{ review.rating}}</p>\n          <a routerLink =\"/user/{{review.username}}\" class=\"username\">{{ review.username}}</a>\n          <p >{{ review.text}}</p>\n        </li>\n      </ul>\n    </div>\n    <div *ngIf=\"!userReviews.length\">\n      <h4 class=\"missing\">No Reviews</h4>\n    </div>\n  </ng-template>\n  <ng-template #elseRBlock>\n    <h4>Loading Reviews . . .</h4>\n  </ng-template>\n\n  <h3>Discussions</h3>\n  <div *ngIf=\"discussionsAreLoaded; then thenDBlock else elseDBlock\"></div>\n  <ng-template #thenDBlock>\n    <div *ngIf=\"userDiscussions.length\">\n      <ul class=\"discussions\">\n        <li *ngFor=\"let discussion of userDiscussions\">\n          <a routerLink=\"/user/{{discussion.username}}\" class=\"username\">{{ discussion.username }}</a>\n          <p *ngIf=\"discussion.topic != 'None'\" class=\"topic\">Topic: {{ discussion.topic}}</p>\n          <div routerLink=\"/discussion/{{discussion.discussionid}}\" class=\"discussionsubject\">{{ discussion.subject}}</div>\n        </li>\n      </ul>\n    </div>\n    <div *ngIf=\"!userDiscussions.length\">\n      <h4 class=\"missing\">No Discussions</h4>\n    </div>\n  </ng-template>\n  <ng-template #elseDBlock>\n    <h4>Loading Discussions . . .</h4>\n  </ng-template>\n\n  <h3>Comments</h3>\n  <div *ngIf=\"commentsAreLoaded; then thenCBlock else elseCBlock\"></div>\n  <ng-template #thenCBlock>\n    <div *ngIf=\"userComments.length\">\n      <ul class=\"comments\">\n        <li *ngFor=\"let comment of userComments\">\n          <div class=\"commentContent\">\n              <a routerLink=\"/user/{{comment.username}}\" class=\"username\">{{ comment.username }}</a>\n              <div routerLink=\"/discussion/{{comment.discussionid}}\" class=\"commenttext\">{{comment.text}}</div>\n          </div>\n        </li>\n      </ul>\n    </div>\n    <div *ngIf=\"!userComments.length\">\n      <h4 class=\"missing\">No Comments</h4>\n    </div>\n  </ng-template>\n  <ng-template #elseCBlock>\n    <h4>Loading Comments . . .</h4>\n  </ng-template>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { User, Review, Discussion, Comment } from '../models';\nimport { LoginService } from '../login.service';\nimport { HttpService } from '../http.service';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  @Input() currentUser: User = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    permissions: 1\n  }\n\n  editedUser: User = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    permissions: 1\n  }\n\n  userIsEditable: boolean = false;\n  userIsUpdating: boolean = false;\n\n  moviesAreLoaded: boolean = false;\n  reviewsAreLoaded: boolean = false;\n  discussionsAreLoaded: boolean = false;\n  commentsAreLoaded: boolean = false;\n\n  userMovieNames: string[] = [];\n  userMovies: any[] = [];\n  userReviews: Review[] = [];\n  userDiscussions: Discussion[] = [];\n  userComments: Comment[] = [];\n\n  constructor(\n    private logger: LoggerService,\n    private _http: HttpService, private _login: LoginService) { }\n\n  ngOnInit(): void {\n\n    this.editedUser.username = this.currentUser.username;\n    this.editedUser.firstname = this.currentUser.firstname;\n    this.editedUser.lastname = this.currentUser.lastname;\n    this.editedUser.email = this.currentUser.email;\n\n    this._login.getUserMovies(this.currentUser.username).subscribe(data => {\n      this.userMovieNames = data;\n\n      if (this.userMovieNames) {\n        this.userMovieNames.forEach(movieName => {\n          // Get the Movie information for each favorited movie, for the poster image.\n          this._http.getMovie(movieName).subscribe(movieData => {\n            this.userMovies.push(movieData);\n          });\n        });\n      }\n      this.moviesAreLoaded = true;\n    });\n\n    this._login.getUserDiscussions(this.currentUser.username).subscribe(data => {\n      if (data != null) {\n        this.userDiscussions = data;\n      }\n      this.discussionsAreLoaded = true;\n    });\n\n    this._login.getUserComments(this.currentUser.username).subscribe(data => {\n      if (data != null) {\n        this.userComments = data;\n      }\n      this.commentsAreLoaded = true;\n    });\n\n    this._login.getUserReviews(this.currentUser.username).subscribe(data => {\n      if (data != null) {\n        this.userReviews = data;\n      }\n      this.reviewsAreLoaded = true;\n    });\n  }\n\n  moviesLoaded() {\n    this.logger.log(\"\", this.moviesAreLoaded);\n    this.moviesAreLoaded = true;\n    return this.moviesAreLoaded;\n  }\n  reviewsLoaded() {\n    this.logger.log(\"\", this.reviewsAreLoaded);\n    this.reviewsAreLoaded = true;\n    return this.reviewsAreLoaded;\n  }\n  dicussionsLoaded() {\n    this.logger.log(\"\", this.discussionsAreLoaded);\n    this.discussionsAreLoaded = true;\n    return this.discussionsAreLoaded\n  }\n\n  commentsLoaded() {\n    this.logger.log(\"\", this.commentsAreLoaded);\n    this.commentsAreLoaded = true;\n    return this.commentsAreLoaded;\n  }\n\n\n  updateUser(): void {\n    if (this.userIsEditable) {\n      this.userIsUpdating = true;\n      this.userIsEditable = false;\n      this._login.postUpdateUser(this.currentUser.username, this.editedUser).subscribe(response => {\n        // Once the update request has processed, use an API call to get the updated user information\n        this._login.loginUser(this.currentUser.username).subscribe((data: User) => {\n          this.currentUser.firstname = data.firstname;\n          this.currentUser.lastname = data.lastname;\n          this.currentUser.email = data.email;\n          localStorage.setItem(\"loggedin\", JSON.stringify(this.currentUser));\n        });\n        this.userIsUpdating = false;\n      });\n    }\n  }\n\n  cancelUpdate(): void {\n    this.editedUser.firstname = this.currentUser.firstname;\n    this.editedUser.lastname = this.currentUser.lastname;\n    this.editedUser.email = this.currentUser.email;\n    this.userIsEditable = false;\n  }\n\n  editUser(): void {\n    if (!this.userIsUpdating) {\n      this.userIsEditable = true;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { MovieComponent } from './movie/movie.component';\nimport { AllUsersComponent } from './all-users/all-users.component';\nimport { UserComponent } from './user/user.component';\nimport { DiscussionComponent } from './discussion/discussion.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ListComponent,\n    MovieComponent,\n    AllUsersComponent,\n    UserComponent,\n    DiscussionComponent,\n    LoginComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// from: https://medium.com/swlh/using-auth0-to-secure-your-angular-application-and-access-your-asp-net-core-api-1947b9389f4f\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport createAuth0Client, { Auth0Client } from '@auth0/auth0-spa-js';\nimport { BehaviorSubject, combineLatest, from, Observable, of, Subject, throwError } from 'rxjs';\nimport { catchError, concatMap, shareReplay, tap } from 'rxjs/operators';\nimport { LoggerService } from './logger.service';\nimport { LoginService } from './login.service';\nimport { UrlService } from './url.service';\nimport { UserService } from './user.service';\n// import { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // todo: change these to user model\n  public authModel$ = new Subject<any>();\n  public authModel = {};\n  public isAdmin$ = new Subject<boolean>();\n  public isAdmin = false;\n  public loading$ = new BehaviorSubject<boolean>(true);\n\n  // Create subject and public observable of user profile data\n  private userProfileSubject$ = new BehaviorSubject<any>(null);\n  userProfile$ = this.userProfileSubject$.asObservable();\n  // Create a local property for login status\n  loggedIn: boolean = null;\n  notLoading: boolean = null;\n\n\n  // Create an observable of Auth0 instance of client\n  auth0Client$ = (from(\n    createAuth0Client({\n      domain: 'cinephiliacs.us.auth0.com', // the account\n      client_id: 'uDzm9BWSa0J3ePufHnwOjxzKWO2hpW5P', // an application\n      redirect_uri: this.urlService.FrontendUrl, // angular deployment url\n      audience: 'https://cinephiliacs-api/' // an API\n    })\n  ) as Observable<Auth0Client>).pipe(\n    shareReplay(1), // Every subscription receives the same shared value\n    catchError(err => throwError(err))\n  );\n\n  // handling redirecting correctly on authentication client change\n  handleRedirectCallback$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\n  );\n\n\n  // Define observables for SDK methods that return promises by default\n  // For each Auth0 SDK method, first ensure the client instance is ready\n  // concatMap: Using the client instance, call SDK method; SDK returns a promise\n  // from: Convert that resulting promise into an observable\n  isAuthenticated$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\n    tap(res => {\n      this.loggedIn = res;\n      this.notLoading = true;\n      this.logger.log(\"isAuthenticated loggedin\", this.loggedIn);\n      this.logger.log(\"isAuthenticated notloading\", this.notLoading);\n      // this.loading$.next(false);\n    })\n  );\n  constructor(\n    private router: Router,\n    private urlService: UrlService,\n    private userService: UserService,\n    private logger: LoggerService,\n  ) {\n    // On initial load, check authentication state with authorization server\n    // Set up local auth streams if user is already authenticated\n    this.localAuthSetup();\n    // Handle redirect from Auth0 login\n    this.handleAuthCallback();\n  }\n\n  // get the token as an observable\n  // this should update automatically\n  getTokenSilently$(options?): Observable<string> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\n    );\n  }\n\n  // When calling, options can be passed if desired\n  // https://auth0.github.io/auth0-spa-js/classes/auth0client.html#getuser\n  getUser$(options?): Observable<any> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getUser(options))),\n      tap(user => {\n        this.userProfileSubject$.next(user);\n      })\n    );\n  }\n\n  private localAuthSetup() {\n    // This should only be called on app initialization\n    // Set up local authentication streams\n    const checkAuth$ = this.isAuthenticated$.pipe(\n      concatMap((loggedIn: boolean) => {\n        if (loggedIn) {\n          this.logger.log(\"loggedIn in checkauth$\", this.loggedIn);\n          this.logger.log(\"notloading\", this.notLoading);\n          // If authenticated, get user and set in app\n          // NOTE: you could pass options here if needed\n          return this.getUser$();\n        }\n        // If not authenticated, return stream that emits 'false'\n        return of(loggedIn);\n      })\n    );\n\n    const temp = this.getTokenSilently$();\n    temp.subscribe(reply => {\n      this.logger.log(\"token\", reply);\n      // this.tryRetrieveUser();\n    });\n    this.userProfile$.subscribe(reply => {\n      this.logger.log(\"userprofile\", reply);\n      if (reply != null) {\n        this.tryRetrieveUser(reply.sub);\n      }\n    });\n    checkAuth$.subscribe((reply) => {\n      this.logger.log(\"in checkAuth$\", reply);\n      // this.tryRetrieveUser(reply.sub);\n    }, () => { }, () => {\n    });\n  }\n\n  // call the users api to get the current user\n  // call this when\n  private tryRetrieveUser(userid: string) {\n    this.userService.getUser(userid).then(reply => {\n      this.authModel$.next(reply);\n      if (reply.firstName == null && window.location.pathname != \"/register\") {\n        this.logger.log(\"new user\", \"\");\n        this.router.navigate([\"register\"]);\n      }\n      else {\n        this.isUserAdmin(userid);\n      }\n    }).catch(err => {\n      this.logger.error(\"in checkAuth$\", err);\n      this.isAdmin$.next(false);\n    });\n  }\n\n  // send a request to check if user is an admin\n  // if user isn't then set isadmin to false\n  private isUserAdmin(userid: string) {\n    this.userService.isAdmin(userid).then(reply => {\n      this.logger.log(\"isadmin\", reply);\n      this.isAdmin$.next(true);\n      this.isAdmin = reply;\n    }).catch(err => {\n      this.logger.error(\"isadmin\", err);\n      this.isAdmin$.next(false);\n      this.isAdmin = false;\n    });\n  }\n\n  login(redirectPath: string = '/') {\n    // A desired redirect path can be passed to login method\n    // (e.g., from a route guard)\n    this.logger.log(\"logging in auth\", \"\");\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      this.logger.log(\"auth0Client$\", client);\n      // Call method to log in\n      client.loginWithRedirect({\n        redirect_uri: `${window.location.origin}`,\n        appState: { target: redirectPath }\n      });\n    });\n  }\n\n  private handleAuthCallback() {\n    // Call when app reloads after user logs in with Auth0\n    const params = window.location.search;\n    if (params.includes('code=') && params.includes('state=')) {\n      let targetRoute: string; // Path to redirect to after login processsed\n      const authComplete$ = this.handleRedirectCallback$.pipe(\n        // Have client, now call method to handle auth callback redirect\n        tap(cbRes => {\n          // Get and set target redirect route from callback results\n          targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\n        }),\n        concatMap(() => {\n          // Redirect callback complete; get user and login status\n          return combineLatest([\n            this.getUser$(),\n            this.isAuthenticated$\n          ]);\n        })\n      );\n      // Subscribe to authentication completion observable\n      // Response will be an array of user and login status\n      authComplete$.subscribe(([user, loggedIn]) => {\n        this.logger.log(\"loggedIn in authcomplete\", this.loggedIn);\n        this.logger.log(\"notLoading\", this.notLoading);\n\n        // Redirect to target route after callback processing\n        this.router.navigate([targetRoute]);\n      });\n    }\n  }\n\n  logout() {\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log out\n      client.logout({\n        client_id: 'uDzm9BWSa0J3ePufHnwOjxzKWO2hpW5P',\n        returnTo: `${window.location.origin}`\n      });\n    });\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  constructor() { }\n\n  log(subject: string, info: any) {\n    console.log(\"\", new Date() + \": \" + subject + \":\");\n    console.log(info);\n  }\n\n  error(subject: string, info: any) {\n    console.error(new Date() + \": \" + subject + \":\");\n    console.error(info);\n  }\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { AppComponent } from './app.component';\nimport { User, Review, Discussion, Comment } from './models';\nimport { LoggerService } from './logger.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  currentUser: string = \"\";\n  askingUser: string = \"\";\n  connection: string = \"\";\n  loggedIn: any;\n\n  baseURL: string = \"https://cinephiliacsapi.azurewebsites.net/\";\n\n  constructor(\n    private logger: LoggerService,\n    private http: HttpClient) { }\n\n  createUser(newUser: string) {\n    return this.http.post(this.baseURL + \"user/\", newUser);\n  }\n\n  loginUser(userName: string) {\n    this.connection = this.baseURL + \"user/\" + userName;\n    this.logger.log(\"\", this.connection);\n    return this.http.get<User>(this.connection);\n  }\n\n  getURL() {\n    return this.baseURL;\n  }\n\n  getTopics() {\n    return this.http.get(this.baseURL + \"forum/topics\");\n  }\n\n\n  getDiscussion(movieId: String) {\n    return this.http.get(this.baseURL + \"forum/discussions/\" + movieId);\n  }\n\n  getReviews(movieId: String) {\n    return this.http.get(this.baseURL + \"movie/reviews/\" + movieId);\n  }\n\n  getReviewsPage(movieId: String, page: number, sortOrder: string) {\n    return this.http.get<Review[]>(this.baseURL + \"movie/reviews/\" + movieId + \"/\" + page + \"/\" + sortOrder);\n  }\n\n  submitDiscussion(discussion: any) {\n    return this.http.post(this.baseURL + \"forum/discussion\", discussion);\n  }\n\n  postMovieId(movieID: string) {\n    return this.http.post(this.baseURL + \"movie/\" + movieID, null);\n  }\n\n  postReview(sumbitReview: any) {\n    return this.http.post(this.baseURL + \"movie/review\", sumbitReview);\n  }\n\n  getUser(username: string) {\n    return this.http.get(this.baseURL + \"user/\" + username);\n  }\n\n  getConnection() {\n    this.logger.log(\"\", this.connection);\n    return this.connection;\n  }\n\n  getCurrentUser() {\n    this.logger.log(\"\", this.currentUser);\n    return this.currentUser;\n  }\n\n  getAskingUser() {\n    this.logger.log(\"\", this.askingUser);\n    return this.askingUser;\n  }\n\n  getUserReviews(username: string) {\n    return this.http.get<Review[]>(this.baseURL + \"user/reviews/\" + username);\n  }\n\n  getUserDiscussions(username: string) {\n    return this.http.get<Discussion[]>(this.baseURL + \"user/discussions/\" + username);\n  }\n\n  getUserMovies(username: string) {\n    return this.http.get<string[]>(this.baseURL + \"user/movies/\" + username);\n  }\n\n  getUserComments(username: string) {\n    return this.http.get<Comment[]>(this.baseURL + \"user/comments/\" + username);\n  }\n\n  postUpdateUser(username: string, updatedUser: User) {\n    return this.http.post<User>(this.baseURL + \"user/update/\" + username, updatedUser);\n  }\n\n  getDiscussionComments(discussionID: string) {\n    return this.http.get(this.baseURL + \"forum/comments/\" + discussionID);\n  }\n\n  getCurrentDiscussion(discussionID: string) {\n    return this.http.get(this.baseURL + \"forum/discussion/\" + discussionID);\n  }\n\n  postComment(newComment: any) {\n    return this.http.post(this.baseURL + \"Forum/comment\", newComment);\n  }\n  followMovie(follower: string, follMovie: string) {\n    return this.http.post(this.baseURL + \"user/movie/\" + follower + \"/\" + follMovie, null);\n  }\n\n}\n","import { environment } from './../environments/environment';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n\n  UserAPIUrl: string = \"http://20.45.2.119/\";\n  ForumAPIUrl: string = \"http://20.45.6.142/\";\n  MovieAPIUrl: string = \"http://20.94.153.81/\";\n  AdminToolsAPIUrl: string = \"http://20.189.29.112/\";\n  AuthenticationAPIUrl: string = \"http://20.45.0.16/\";\n  FrontendUrl: string = \"http://20.94.137.143/\";\n  RecommendationsAPIUrl: string = \"http://20.189.28.203/\";\n  GroupsAPIUrl: string = \"http://20.45.0.67/\";\n  ReviewsAPIUrl: string = \"http://20.189.30.176/\";\n\n  constructor() {\n    if (environment.production) {\n      this.UserAPIUrl = \"http://20.45.2.119/\";\n      this.ForumAPIUrl = \"http://20.45.6.142/\";\n      this.MovieAPIUrl = \"http://20.94.153.81/\";\n      this.AdminToolsAPIUrl = \"http://20.189.29.112/\";\n      this.AuthenticationAPIUrl = \"http://20.45.0.16/\";\n      this.FrontendUrl = \"http://20.94.137.143/\";\n      this.RecommendationsAPIUrl = \"http://20.189.28.203/\";\n      this.GroupsAPIUrl = \"http://20.45.0.67/\";\n      this.ReviewsAPIUrl = \"http://20.189.30.176/\";\n    } else {\n      this.UserAPIUrl = \"https://localhost:5001/\";\n      this.ForumAPIUrl = \"https://localhost:5002/\";\n      this.MovieAPIUrl = \"https://localhost:5003/\";\n      this.AdminToolsAPIUrl = \"https://localhost:5004/\";\n      this.AuthenticationAPIUrl = \"https://localhost:5005/\";\n      this.FrontendUrl = \"http://localhost:4200/\";\n      this.RecommendationsAPIUrl = \"https://localhost:5007/\";\n      this.GroupsAPIUrl = \"https://localhost:5008/\";\n      this.ReviewsAPIUrl = \"https://localhost:5009/\";\n    }\n  }\n}\n","<p>all-users works!</p>\n\n<div *ngIf=\"users\">\n    <li *ngFor=\"let user of users\">\n        <a routerLink=\"/user/{{user.username}}\">{{ user.username }}</a>\n    </li>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-all-users',\n  templateUrl: './all-users.component.html',\n  styleUrls: ['./all-users.component.scss']\n})\nexport class AllUsersComponent implements OnInit {\n\n  users: any;\n  constructor(private http: HttpClient,\n    private logger: LoggerService,\n  ) { }\n\n  ngOnInit(): void {\n    this.http.get(\"https://cinephiliacsapi.azurewebsites.net/user/users\").subscribe(data => {\n      this.logger.log(\"\", data);\n      this.users = data;\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router'\nimport { HttpService } from '../http.service';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  //object | undefined is what the example gave\n  movies: any = [];\n  searches: any;\n\n  movies2: any;\n  searches2: any;\n  searchTerm: any;\n  pageNum: any;\n  nextPg: any;\n  prevPg: any;\n\n  searchForm!: FormGroup;\n\n  constructor(\n    private logger: LoggerService,\n    private router: ActivatedRoute, private _http: HttpService) { }\n\n  ngOnInit(): void {\n\n    this.searchForm = new FormGroup({\n      search: new FormControl('', Validators.minLength(2))\n    });\n\n    this.logger.log(\"\", this.router.snapshot.params);\n    this.searchTerm = this.router.snapshot.params.search;\n    this.pageNum = (this.router.snapshot.params.page - 1) * 2 + 1;\n    if (this.pageNum < 75) {\n      this.nextPg = parseInt(this.router.snapshot.params.page) + 1;\n    }\n    if (this.pageNum > 1) {\n      this.prevPg = this.router.snapshot.params.page - 1;\n    }\n    this._http.getMovies(this.searchTerm, this.pageNum).subscribe(data => {\n      this.movies = data;\n      this.searches = this.movies.Search;\n      this.logger.log(\"\", \"this is movies now just so you know\");\n      this.logger.log(\"\", this.movies.Search);\n\n    });\n    this._http.getMovies(this.searchTerm, (this.pageNum + 1)).subscribe(data => {\n      this.movies2 = data;\n\n      this.searches2 = this.movies2.Search;\n      this.logger.log(\"\", \"this is movies now just so you know\");\n      this.logger.log(\"\", this.movies2);\n    });\n\n  }\n  myNumber: number = 0;\n  myStrings: string = '';\n  function1(): void {\n    this.myNumber++;\n  }\n  function2(s1: string, s2: string): void {\n    this.myStrings = s1 + s2;\n  }\n  function3(myString: string): string {\n    return myString + myString;\n  }\n\n  increasePage() {\n    this.pageNum++;\n    return this.pageNum;\n  }\n\n  decreasePage() {\n    this.pageNum--;\n    return this.pageNum;\n  }\n  getPreviousPageNum() {\n    this.prevPg = this.pageNum - 1;\n    this.logger.log(\"\", this.prevPg);\n    return this.prevPg;\n  }\n\n  getNextPageNum() {\n    this.nextPg = this.pageNum + 1;\n    this.logger.log(\"\", this.nextPg);\n    return this.nextPg;\n  }\n\n  getPageNum() {\n    this.logger.log(\"\", \"PageNum\" + this.pageNum);\n    return this.pageNum;\n  }\n\n\n  getSearchTerm() {\n    this.logger.log(\"\", \"Search Term\" + this.searchTerm);\n    return this.searchTerm;\n  }\n\n  onSubmit() {\n    if (this.searchForm.get('search')!.value != \"\") {\n      let searchParam = JSON.stringify(this.searchForm.get('search')!.value).substring(1, JSON.stringify(this.searchForm.get('search')!.value).length - 1);\n      window.location.href = \"/list/\" + searchParam + \"/1\";\n    }\n  }\n\n}\n","<div class=\"search\">\n    <form id=\"searchInput\" [formGroup]=\"searchForm\" (ngSubmit)=\"onSubmit()\">\n        <!-- svg source https://freesvg.org/vector-clip-art-of-minimal-design-search-icon -->\n        <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"28.10632\" height=\"25\" viewBox=\"0 0 55.770032 124.72441\" id=\"svg4983\" version=\"1.1\" inkscape:version=\"0.91 r13725\" sodipodi:docname=\"Minimal Magnifying Glass.svg\">\n            <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\" transform=\"translate(64.082039,-216.03793)\">\n            <g id=\"g4288\" transform=\"matrix(12.843054,0,0,12.843054,-4352.973,-5791.3727)\" style=\"fill:none;stroke:grey;stroke-width:1.5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\">\n                <circle r=\"3.625\" cy=\"472.13062\" cx=\"335.03351\" id=\"path4284\" style=\"color:grey;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation-filters:linearRGB;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#393939;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\"/>\n                <path sodipodi:nodetypes=\"cc\" inkscape:connector-curvature=\"0\" id=\"path4286\" d=\"m 337.9085,474.44313 2.90967,2.26732\" style=\"color:grey;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation-filters:linearRGB;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#393939;stroke-width:1.5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\"/>\n            </g>\n            </g>\n        </svg>\n        <input type=\"text\" id=\"pgSearch\" name=\"pgSearch\" formControlName=\"search\">\n    </form>\n    <div class=\"filters\">\n    </div>\n</div>\n \n<h1>Results for \"{{searchTerm}}\"</h1>\n<ul *ngIf=\"searches\">\n    <li *ngFor=\"let search of searches\">\n        <div class=\"image\">\n            <img src=\"{{search.Poster}}\" routerLink=\"/movie/{{search.imdbID}}\" alt=\"Movie Poster\">\n        </div>\n        <p class=\"name\">{{ search.Title }}</p>\n        <p class=\"year\">{{ search.Year }}<span *ngIf=\"search.Year.substring(search.Year.length - 1)=='–'\">present</span></p>\n        <p class=\"id\">{{ search.imdbID }}</p>\n    </li>\n</ul>\n<ul *ngIf=\"searches2\">\n    <li *ngFor=\"let search of searches2\">\n        <div class=\"image\">\n            <img src=\"{{search.Poster}}\" routerLink=\"/movie/{{search.imdbID}}\" alt=\"Movie Poster\">\n        </div>\n        <p class=\"name\">{{ search.Title }}</p>\n        <p class=\"year\">{{ search.Year }}<span *ngIf=\"search.Year.substring(search.Year.length - 1)=='–'\">present</span></p>\n        <p class=\"id\">{{ search.imdbID }}</p>\n    </li>\n</ul>\n\n<div class=\"pages\">\n    <a href=\"/list/{{searchTerm}}/{{prevPg}}\" class=\"prev\" *ngIf=\"prevPg>0\">Previous Page</a>\n    <a href=\"/list/{{searchTerm}}/{{nextPg}}\" class=\"next\" *ngIf=\"nextPg<76\">Next Page</a>\n</div>\n\n\n\n\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllUsersComponent } from './all-users/all-users.component';\nimport { DiscussionComponent } from './discussion/discussion.component';\nimport { HomeComponent } from './home/home.component';\nimport { InterceptorService } from './interceptor.service';\nimport { ListComponent } from './list/list.component';\nimport { MovieComponent } from './movie/movie.component';\nimport { UserComponent } from './user/user.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'list/:search/:page', component: ListComponent },\n  { path: 'movie/:id', component: MovieComponent },\n  { path: 'alluser', component: AllUsersComponent },\n  { path: 'user/:username', component: UserComponent },\n  { path: 'discussion/:id', component: DiscussionComponent },\n  { path: '**', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: InterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class AppRoutingModule { }\n","<div *ngIf=\"selectedMovie\" class=\"movieinfo\">\n    <h1>{{ selectedMovie.Title }}</h1>\n    <div *ngIf=\"user\">\n      <div *ngIf=\"movieFollowed then thenFBlock else elseFBlock\"></div>\n      <ng-template #thenFBlock>\n        <button class=\"deactived\">Following Movie</button>\n      </ng-template>\n      <ng-template #elseFBlock>\n        <button (click)=\"followMovie()\">Follow Movie</button>\n      </ng-template>\n    </div>\n\n    <ul>\n        <li>\n            <img src=\"{{selectedMovie.Poster}}\" alt=\"Movie Poster\">\n            <div class=\"information\">\n                <p class=\"name\"><strong>Title:</strong> {{ selectedMovie.Title }}</p>\n                <p *ngIf=\"reviews.length > 0\" class=\"reviewscore\"><strong>User Review Score: </strong>{{ reviewScore.toFixed(1) }}</p>\n                <p class=\"year\"><strong>Year(s):</strong> {{ selectedMovie.Year }}<span *ngIf=\"selectedMovie.Year.substring(selectedMovie.Year.length - 1)=='–'\">present</span></p>\n                <p class=\"date\"><strong>Release Date:</strong> {{ selectedMovie.Released }}</p>\n                <p class=\"runtime\"><strong>Runtime:</strong> {{ selectedMovie.Runtime }}</p>\n                <p class=\"genre\"><strong>Genre:</strong> {{ selectedMovie.Genre }}</p>\n                <p class=\"directors\"><strong>Director(s):</strong> {{ selectedMovie.Director }}</p>\n                <p class=\"writers\"><strong>Writer(s):</strong> {{ selectedMovie.Writer }}</p>\n                <p class=\"actors\"><strong>Actors:</strong> {{ selectedMovie.Actors }}</p>\n                <p class=\"awards\"><strong>Awards:</strong> {{ selectedMovie.Awards }}</p>\n                <p class=\"plot\"><strong>Plot Summary:</strong> {{ selectedMovie.Plot }}</p>\n                <!-- <p class=\"id\">{{ selectedMovie.imdbID }}</p> -->\n            </div>\n        </li>\n    </ul>\n</div>\n\n<div class=\"left\">\n    <h3>Reviews</h3>\n    <div *ngIf=\"(reviews.length > 0) then thenRBlock else elseRBlock\"></div>\n    <ng-template #thenRBlock>\n      <span>Sort By: </span>\n      <span class=\"sort\" (click)=\"timeSortNext()\" [class.selected]=\"timeActive\">{{timeSortString}}</span>\n      <span class=\"sort lastchild\" (click)=\"ratingSortNext()\" [class.selected]=\"ratingActive\">{{ratingSortString}}</span>\n      <ul>\n          <li *ngFor=\"let review of reviews\">\n              <p class=\"rating\">{{ review.rating}}</p>\n              <u routerLink =\"/user/{{review.username}}\" class=\"username\">{{ review.username}}</u>\n              <p >{{ review.text}}</p>\n\n          </li>\n      </ul>\n      <button *ngIf=\"!lastPage\" (click)=\"loadNextPage()\">More Reviews</button>\n    </ng-template>\n    <ng-template #elseRBlock>\n      <span>This movie has not be reviewed</span>\n    </ng-template>\n\n    <div *ngIf=\"user\" id=\"review\">\n        <h4>New Review</h4>\n        <form>\n            <label>Rating:</label><br>\n            <select name=\"rating\" id=\"rating\" [(ngModel)]=\"sumbitReview.rating\" [ngModelOptions]=\"{standalone: true}\">\n                <option selected hidden disabled></option>\n                <option value=\"1\">1</option>\n                <option value=\"1.5\">1.5</option>\n                <option value=\"2\">2</option>\n                <option value=\"2.5\">2.5</option>\n                <option value=\"3\">3</option>\n                <option value=\"3.5\">3.5</option>\n                <option value=\"4\">4</option>\n                <option value=\"4.5\">4.5</option>\n                <option value=\"5\">5</option>\n            </select><br>\n            <label>Review Text:</label><br>\n            <input type=\"text\" [(ngModel)]=\"sumbitReview.text\" [ngModelOptions]=\"{standalone: true}\"><br>\n            <button type=\"reset\"  (click)=\"postReview()\">Submit Review</button>\n        </form>\n    </div>\n</div>\n\n<div class=\"right\">\n\n  <h3>Recent Discussions</h3>\n  <div *ngIf=\"discussions then thenDBlock else elseDBlock\"></div>\n  <ng-template #thenDBlock>\n    <ul>\n        <li *ngFor=\"let discussion of discussions\">\n            <!-- <p >{{ discussion.discussionid}}</p> -->\n            <u routerLink=\"/discussion/{{discussion.discussionid}}\">{{discussion.subject}}</u>\n            <span *ngIf=\"discussion.topic != 'None'\">{{discussion.topic}}</span>\n        </li>\n    </ul>\n  </ng-template>\n  <ng-template #elseDBlock>\n    <span>There are no discussions for this movie</span>\n  </ng-template>\n\n    <div *ngIf=\"user\" id=\"discussion\">\n        <h4>New Discussion</h4>\n        <form>\n            <label>Topic: </label><br>\n            <select name=\"rating\" id=\"rating\" [(ngModel)]=\"submitDiscussion.topic\" [ngModelOptions]=\"{standalone: true}\">\n                <option selected hidden disabled></option>\n                <option *ngFor=\"let topic of topics\"\n                        [value]=\"topic\">\n                        {{topic}}\n                </option>\n            </select><br>\n            <label>Discussion Subject:</label><br>\n            <input type=\"text\" [(ngModel)]=\"submitDiscussion.subject\" [ngModelOptions]=\"{standalone: true}\"><br>\n            <button type=\"reset\" (click)=\"postDiscussion()\">Submit Discussion</button>\n        </form>\n    </div>\n</div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpService } from '../http.service';\nimport { LoggerService } from '../logger.service';\nimport { LoginService } from '../login.service';\nimport { Review } from '../models';\n\ninterface SubmiteReview {\n  rating: number,\n  movieid: string,\n  username: string,\n  text: string\n}\n\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.scss']\n})\nexport class MovieComponent implements OnInit {\n\n  reviewScoreSum: number = 0;\n  reviewScore: number = 0;\n  selectedMovie: any;\n  movieID: any;\n  discussions: any;\n  reviews: Review[] = [];\n  input: any;\n  user: any;\n  movieFollowed: boolean = false;\n\n  reviewPage: number = 1;\n  reviewSortOrder: string = \"timedsc\";\n\n  timeSortState: number = 0;\n  timeSortString: string = \"Newest\";\n  ratingSortState: number = 0;\n  ratingSortString: string = \"Rating \\u21D5\";\n  ratingActive: boolean = false;\n  timeActive: boolean = true;\n  reviewsBusy: boolean = false;\n  lastPage: boolean = false;\n\n  sumbitReview: SubmiteReview = {\n    rating: 0,\n    movieid: this.router.snapshot.params.id,\n    username: \"0\",\n    text: \"\"\n  }\n\n  submitDiscussion: any = {\n    movieid: this.router.snapshot.params.id,\n    topic: \"\",\n    username: \"\",\n    subject: \"\"\n  }\n\n  topics: any;\n\n  constructor(\n    private logger: LoggerService,\n    private router: ActivatedRoute, private _http: HttpService, private _login: LoginService) { }\n\n  ngOnInit(): void {\n    this.logger.log(\"\", this.router.snapshot.params);\n    this.inputFields();\n    this._login.getTopics().subscribe(data => {\n      this.logger.log(\"\", data);\n      this.topics = data;\n    });\n\n    //will get the details of the movie from the IMDB API\n    this.movieID = this.router.snapshot.params.id;\n    this._http.getMovie(this.movieID).subscribe(data => {\n      this.selectedMovie = data;\n      this.logger.log(\"\", \"this is movies now just so you know\");\n      this.logger.log(\"\", this.selectedMovie);\n    });\n\n    //Will get the discussions for the movie\n    this.showDiscussion();\n\n    //Movie Reviews\n    this.loadReviews(this.reviewPage);\n    if (this.user) {\n      this._login.getUserMovies(JSON.parse(this.user).username).subscribe((usersMovieNames: string[]) => {\n        if (typeof usersMovieNames.find(m => m == this.movieID) === 'undefined') {\n          this.movieFollowed = false;\n        }\n        else {\n          this.movieFollowed = true;\n        }\n      });\n    }\n    else {\n      this.logger.log(\"\", \"user isn't set\");\n    }\n\n    //saving a reference to the database of movies interacted with\n    this._login.postMovieId(this.movieID).subscribe(data => this.logger.log(\"\", \"submitted\"));\n  }\n\n  loadReviews(page: number) {\n    this._login.getReviewsPage(this.movieID, page, this.reviewSortOrder)\n      .subscribe((data: Review[]) => {\n        if (data.length == 0) {\n          this.lastPage = true;\n          this.reviewPage = page - 1;\n        }\n        else {\n          data.forEach((review: Review) => {\n            this.logger.log(\"\", review);\n            this.reviews.push(review);\n            this.reviewScoreSum += Number(review.rating);\n          });\n          this.reviewScore = this.reviewScoreSum / this.reviews.length;\n          this.logger.log(\"\", this.reviewScore);\n          this.reviewsBusy = false;\n        }\n      }, error => {\n        this.lastPage = true;\n        this.reviewPage = page - 1;\n        this.reviewsBusy = false;\n      });\n  }\n\n  loadNextPage() {\n    if (!this.lastPage && !this.reviewsBusy) {\n      this.reviewsBusy = true;\n      this.lastPage = true;\n      this.reviewPage += 1;\n      this.loadReviews(this.reviewPage);\n    }\n  }\n\n  timeSortNext() {\n    if (!this.reviewsBusy) {\n      this.reviewsBusy = true;\n      switch (this.timeSortState) {\n        case 0:\n          this.timeSortState = 1;\n          this.timeSortString = \"Oldest\";\n          this.ratingSortState = 0;\n          this.ratingSortString = \"Rating \\u21D5\";\n          this.changeReviewSortOrder(\"timeasc\");\n          break;\n        case 1:\n          this.timeSortState = 2;\n          this.timeSortString = \"Newest\";\n          this.ratingSortState = 0;\n          this.ratingSortString = \"Rating \\u21D5\";\n          this.changeReviewSortOrder(\"timedsc\");\n          break;\n        case 2:\n          this.timeSortState = 1;\n          this.timeSortString = \"Oldest\";\n          this.ratingSortState = 0;\n          this.ratingSortString = \"Rating \\u21D5\";\n          this.changeReviewSortOrder(\"timeasc\");\n          break;\n      }\n      this.ratingActive = false;\n      this.timeActive = true;\n    }\n  }\n\n  ratingSortNext() {\n    if (!this.reviewsBusy) {\n      this.reviewsBusy = true;\n      switch (this.ratingSortState) {\n        case 0:\n          this.ratingSortState = 1;\n          this.ratingSortString = \"Rating \\u21D1\";\n          this.timeSortState = 0;\n          this.timeSortString = \"Time \\u21D5\";\n          this.changeReviewSortOrder(\"ratingasc\");\n          break;\n        case 1:\n          this.ratingSortState = 2;\n          this.ratingSortString = \"Rating \\u21D3\";\n          this.timeSortState = 0;\n          this.timeSortString = \"Time \\u21D5\";\n          this.changeReviewSortOrder(\"ratingdsc\");\n          break;\n        case 2:\n          this.ratingSortState = 1;\n          this.ratingSortString = \"Rating \\u21D1\";\n          this.timeSortState = 0;\n          this.timeSortString = \"Time \\u21D5\";\n          this.changeReviewSortOrder(\"ratingasc\");\n          break;\n      }\n      this.timeActive = false;\n      this.ratingActive = true;\n    }\n  }\n\n  changeReviewSortOrder(sortOrder: string) {\n    if (sortOrder == \"ratingasc\" || sortOrder == \"ratingdsc\"\n      || sortOrder == \"timeasc\" || sortOrder == \"timedsc\") {\n      this.reviews = [];\n      this.reviewScoreSum = 0;\n      this.reviewSortOrder = sortOrder;\n      this.reloadReviews(false);\n    }\n  }\n\n  reloadReviews(loadNew: boolean) {\n    if (loadNew) {\n      this.reviews = [];\n      this.reviewPage += 1;\n    }\n    for (let pageCounter: number = 1; pageCounter <= this.reviewPage; pageCounter++) {\n      setTimeout(() => { this.loadReviews(pageCounter); }, 300 * pageCounter);\n    }\n  }\n\n  async showDiscussion() {\n    setTimeout(() => {\n      this._login.getDiscussion(this.movieID).subscribe(data => {\n        this.logger.log(\"\", data);\n        this.discussions = data;\n      });\n    }, 2000);\n  }\n\n  followMovie() {\n    if (this.user) {\n      this._login.followMovie(JSON.parse(this.user).username, this.movieID).subscribe(data => {\n        this.movieFollowed = true;\n      });\n    }\n  }\n\n  postDiscussion() {\n    if (this.submitDiscussion.topic == \"\" || this.submitDiscussion.subject == \"\") {\n      this.logger.log(\"\", \"didn't submit discussion\");\n    } else if (this.submitDiscussion.subject.length >= 250) {\n      alert(\"Discussion should be less than 250 Characters\")\n    } else {\n\n      this._login.submitDiscussion(this.submitDiscussion).subscribe(data => this.logger.log(\"\", data));\n      this.showDiscussion();\n    }\n    this.logger.log(\"\", this.submitDiscussion);\n  }\n\n  postReview() {\n    if (this.sumbitReview.rating == 0 || this.sumbitReview.text == \"\") {\n      this.logger.log(\"\", \"Review Not Sumbitted\");\n    } else if (this.sumbitReview.text.length >= 250) {\n      alert(\"Reviews should be less than 250 Characters\")\n    } else {\n      this._login.postReview(this.sumbitReview).subscribe(data => this.logger.log(\"\", data));\n      this.lastPage = false;\n      this.reloadReviews(true);\n    }\n    this.logger.log(\"\", this.sumbitReview);\n  }\n\n  inputFields() {\n    if (localStorage.getItem(\"loggedin\")) {\n      this.logger.log(\"\", \"userset\");\n      this.user = localStorage.getItem(\"loggedin\")\n\n      this.logger.log(\"\", JSON.parse(this.user).username + \"USER\");\n      this.logger.log(\"\", this.user);\n      this.submitDiscussion.username = JSON.parse(this.user).username;\n      this.sumbitReview.username = JSON.parse(this.user).username;\n      this.logger.log(\"\", this.sumbitReview);\n\n    } else {\n\n      this.logger.log(\"\", \"no User\");\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { LoggerService } from '../logger.service';\nimport { LoginService } from '../login.service';\nimport { User } from '../models';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  @Input() currentUser: User = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    permissions: 1\n  }\n  @Output() currentUserChange = new EventEmitter<User>();\n\n  userName: string = \"\";\n  password: string = \"\";\n  passwordNotOk: any = false;\n\n  isLoginPage: boolean = true;\n\n  newUser: any = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    permissions: 1\n  }\n\n  constructor(\n    private logger: LoggerService,\n    private _login: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.logger.log(\"\", \"Login attempt\" + this.userName);\n    this._login.loginUser(this.userName).subscribe((data: User) => {\n      this.logger.log(\"\", data);\n      if (data.lastname == this.password) {\n        this.passwordNotOk = false;\n        this.currentUser = data;\n      }\n      else {\n        this.passwordNotOk = true;\n        setTimeout(() => {\n          this.passwordNotOk = false;\n        }, 3000);\n      }\n      this.logger.log(\"\", this.currentUser.username);\n      this.currentUserChange.emit(this.currentUser);\n      localStorage.setItem(\"loggedin\", JSON.stringify(this.currentUser));\n      return data;\n    });\n  }\n\n  createUser() {\n    this.logger.log(\"\", \"In Create\");\n    if (!this.newUser.firstname || !this.newUser.lastname || !this.newUser.username || !this.newUser.email) {\n      this.logger.log(\"\", \"Please fill in all data\")\n    }\n    else {\n      this.logger.log(\"\", JSON.stringify(this.newUser));\n      this._login.createUser(this.newUser).subscribe(data => {\n        this.logger.log(\"\", data);\n        this.currentUser = this.newUser;\n        this.userName = this.currentUser.username;\n        this.password = this.currentUser.lastname;\n        this.login();\n      });\n    }\n  }\n\n  getUserName() {\n    this.logger.log(\"\", this.userName);\n    return this.userName;\n  }\n\n\n  isPasswordRigt(pass: string) {\n    this.logger.log(\"\", \"Checking\");\n    return (pass == this.password);\n  }\n\n  switchToRegister(): void {\n    this.isLoginPage = false;\n  }\n\n  backToLogin(): void {\n    this.isLoginPage = true;\n  }\n}\n","<div *ngIf=\"isLoginPage; then thenBlock else elseBlock\"></div>\n<ng-template #thenBlock>\n  <form>\n    <div class=\"container\" (ngSubmit)=\"login()\">\n        <h2>Log In</h2>\n        <label for=\"uname\">Username:</label><br>\n        <input type=\"text\" placeholder=\"Enter Username\" [(ngModel)]=\"userName\" [ngModelOptions]=\"{standalone: true}\" required>\n        <br>\n        <label for=\"pword\">Password:</label><br>\n        <input type=\"password\" placeholder=\"Enter Password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" required>\n        <p *ngIf=\"passwordNotOk\" id=\"pwcheck\">Incorrect Password</p>\n        <br>\n        <button (click)=\"login()\">Login</button><br>\n        <a (click)=\"switchToRegister()\">Create an Account</a>\n    </div>\n  </form>\n</ng-template>\n<ng-template #elseBlock>\n  <form class=\"registerform\">\n    <div class=\"container\" (ngSubmit)=\"createUser()\">\n      <h2>Register</h2>\n      <label for=\"uname\">Username:</label><br>\n      <input type=\"text\" placeholder=\"Enter Username\" [(ngModel)]=\"newUser.username\" [ngModelOptions]=\"{standalone: true}\" required><br>\n      <label for=\"uname\">Password:</label><br>\n      <input type=\"text\" placeholder=\"Enter Password\" required><br>\n      <label for=\"uname\">First Name:</label><br>\n      <input type=\"text\" placeholder=\"Enter First Name\" [(ngModel)]=\"newUser.firstname\" [ngModelOptions]=\"{standalone: true}\" required><br>\n      <label for=\"uname\">Last Name:</label><br>\n      <input type=\"text\" placeholder=\"Enter Last Name\" [(ngModel)]=\"newUser.lastname\" [ngModelOptions]=\"{standalone: true}\" required><br>\n      <label for=\"uname\">Email:</label><br>\n      <input type=\"text\" placeholder=\"Enter Email Address\" [(ngModel)]=\"newUser.email\" [ngModelOptions]=\"{standalone: true}\" required><br>\n      <button (click)=\"createUser()\">Register</button><br>\n      <a (click)=\"backToLogin()\">Return to Login</a>\n    </div>\n  </form>\n</ng-template>\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { AppComponent } from './app.component';\nimport { User, Review, Discussion, Comment } from './models';\nimport { UrlService } from './url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  // baseURL: string = \"https://localhost:5001/user\";\n  baseURL: string = \"\";\n\n  constructor(private http: HttpClient, private urlService: UrlService) {\n    this.baseURL = urlService.UserAPIUrl + \"user\";\n  }\n\n  getUser(userid: string): Promise<any> {\n    return this.http.get(this.baseURL + `/${userid}`).toPromise();\n  }\n\n  isAdmin(userid: string): Promise<any> {\n    return this.http.get(this.baseURL + `/isadmin`).toPromise();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}