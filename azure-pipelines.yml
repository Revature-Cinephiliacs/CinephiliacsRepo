# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

pool:
  vmImage: windows-latest

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'
    #may need 'workingDir: $(solution)'

- task: Npm@1
  inputs:
    command: 'custom'
    #may need 'workingDir: $(solution)'
    customCommand: 'run build --prod'
    #verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'dist'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

# Publish Artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'dist'
    # publishLocation: 'Container'

# below is azure deploy
# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'Project-3-Training(e37a1117-750a-4552-bb20-e84ed6f3c85d)'
#     appType: 'webApp'
#     WebAppName: 'cinephiliacsapp'
#     packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
#     enableCustomDeployment: true
#     DeploymentType: runFromZip

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Project-3-Training(1)(e37a1117-750a-4552-bb20-e84ed6f3c85d)'
    appType: 'webApp'
    WebAppName: 'cinephiliacsapp'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'